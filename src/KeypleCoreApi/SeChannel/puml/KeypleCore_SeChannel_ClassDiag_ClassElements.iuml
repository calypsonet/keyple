'---------------------------------------------------------------------------------
' Copyright (c) 2018 Calypso Networks Association https://www.calypsonet-asso.org/
'
' See the NOTICE file(s) distributed with this work for additional
' information regarding copyright ownership.
'
' This program and the accompanying materials are made available under the
' terms of the Eclipse Public License 2.0 which is available at
' http://www.eclipse.org/legal/epl-2.0
'
' SPDX-License-Identifier: EPL-2.0 4
'---------------------------------------------------------------------------------

@startuml(id=MESSAGE_PROXYREADER_0_8)
+interface ProxyReader {
  +List<SeResponse> transmitSet(Set<SeRequest> seApplicationRequest,
    MultiSeRequestProcessing multiSeRequestProcessing, ChannelControl channelControl)
  +List<SeResponse> transmitSet(Set<SeRequest> seApplicationRequest)

  +SeResponse transmit(SeRequest seApplicationRequest, ChannelControl channelControl)
  +SeResponse transmit(SeRequest seApplicationRequest)
}
@enduml

@startuml(id=MESSAGE_PROXYREADER_0_9)
+interface ProxyReader {
  +List<SeResponse> transmitSeRequests(List<SeRequest> seRequests,
    MultiSeRequestProcessing multiSeRequestProcessing, ChannelControl channelControl)

  +SeResponse transmitSeRequest(SeRequest seRequest, ChannelControl channelControl)
}
@enduml

@startuml(id=MESSAGE_PROXYREADER_ReaderAPI)
+interface ProxyReader {
  +List<SeResponse> transmitSeRequests(List<SeRequest> seRequests,
    ChannelControl channelControl)

  +SeResponse transmitSeRequest(SeRequest seRequest,
    ChannelControl channelControl)
}
@enduml

@startuml(id=MESSAGE_DEFAULTSELECTION_0_8_0)
+class "<b>final</b> DefaultSelectionsRequest" as DefaultSelectionsRequest {
  -Set<SeRequest> selectionSeRequestSet
  -MultiSeRequestProcessing multiSeRequestProcessing
  -ChannelControl channelControl
  +DefaultSelectionsRequest(Set<SeRequest> selectionSeRequestSet,
    MultiSeRequestProcessing mode, ChannelControl channelControl)
  +DefaultSelectionsRequest(Set<SeRequest> selectionSeRequestSet)

  +MultiSeRequestProcessing getMultiSeRequestProcessing()
  +ChannelControl getChannelControl()
  +Set<SeRequest> getSelectionSeRequestSet()
}

+class "<b>final</b> DefaultSelectionsResponse" as DefaultSelectionsResponse {
  -List<SeResponse> selectionSeResponses
  +DefaultSelectionsResponse(List<SeResponse> selectionSeResponseSet)

  +List<SeResponse> getSelectionSeResponses()
}
@enduml

@startuml(id=MESSAGE_DEFAULTSELECTION_0_9_0)
+class "<b>final</b> DefaultSelectionsRequest" as DefaultSelectionsRequest {
  +DefaultSelectionsRequest(List<SeRequest> selectionSeRequests,
    MultiSeRequestProcessing multiSeRequestProcessing, ChannelControl channelControl)
}

+class "<b>final</b> DefaultSelectionsResponse" as DefaultSelectionsResponse {
  +DefaultSelectionsResponse(List<SeResponse> selectionSeResponses)
}
@enduml

@startuml(id=MESSAGE_DEFAULTSELECTION_1_0_0)
+class "<b>final</b> DefaultSelectionsRequest" as DefaultSelectionsRequest {
  -<b>final</b> List<SeRequest> selectionSeRequests
  -<b>final</b> MultiSeRequestProcessing multiSeRequestProcessing
  -<b>final</b> ChannelControl channelControl
'
  +DefaultSelectionsRequest(List<SeRequest> selectionSeRequests,
    MultiSeRequestProcessing multiSeRequestProcessing, ChannelControl channelControl)

  +List<SeRequest> getSelectionSeRequests()
  +MultiSeRequestProcessing getMultiSeRequestProcessing()
  +ChannelControl getChannelControl()
}

+class "<b>final</b> DefaultSelectionsResponse" as DefaultSelectionsResponse {
  -<b>final</b> List<SeResponse> selectionSeResponses
'
  +DefaultSelectionsResponse(List<SeResponse> selectionSeResponses)

  +List<SeResponse> getSelectionSeResponses()
}
@enduml

@startuml(id=MESSAGE_SEREQUEST_0_8)
+class "<b>final</b> SeRequest" as SeRequest {
  -<b>final</b> Selector[0..1] selector
  -<b>final</b> List<ApduRequest> apduRequests

  +SeRequest(Selector[0..1] selector, List<ApduRequest> apduRequests)

  +SeSelector getSeSelector()
  +List<ApduRequest> getApduRequests()
}

+class "<b>final</b> SeResponse" as SeResponse {
  -<b>final</b> boolean channelPreviouslyOpen
  -<b>final</b> boolean logicalChannelIsOpen
  -<b>final</b> SelectionStatus selectionStatus
  -<b>final</b> List<ApduResponse> apduResponses

  +SeResponse(boolean logicalChannelIsOpen, boolean channelPreviouslyOpen,
    SelectionStatus selectionStatus, List<ApduResponse> apduResponses)
  +boolean wasChannelPreviouslyOpen()
  +boolean isLogicalChannelOpen()
  +SelectionStatus getSelectionStatus()
  +List<ApduResponse> getApduResponses()
  +String toString()
  +boolean equals(Object o)
  +int hashCode()
}
@enduml

@startuml(id=MESSAGE_SEREQUEST_0_9)
+class "<b>final</b> SeRequest" as SeRequest {
  -<b>final</b> Selector[0..1] selector
  -<b>final</b> List<ApduRequest> apduRequests

  +SeRequest(Selector[0..1] selector, List<ApduRequest> apduRequests)

  +SeSelector getSeSelector()
  +List<ApduRequest> getApduRequests()
}

+class "<b>final</b> SeResponse" as SeResponse {
  -<b>final</b> boolean channelPreviouslyOpen
  -<b>final</b> boolean logicalChannelIsOpen
  -<b>final</b> SelectionStatus selectionStatus
  -<b>final</b> List<ApduResponse> apduResponses

  +SeResponse(boolean logicalChannelIsOpen, boolean channelPreviouslyOpen,
    SelectionStatus selectionStatus, List<ApduResponse> apduResponses)
  +boolean wasChannelPreviouslyOpen()
  +boolean isLogicalChannelOpen()
  +SelectionStatus getSelectionStatus()
  +List<ApduResponse> getApduResponses()
}
@enduml

@startuml(id=MESSAGE_APDUREQUEST_0_8)
+class "<b>final</b> ApduRequest" as ApduRequest {
  -byte[] bytes
  -<b>final</b> boolean case4
  -<b>final</b>Set<Integer> successfulStatusCodes
  -String name


  +ApduRequest(byte[] buffer, boolean case4, Set<Integer> successfulStatusCodes)
  +ApduRequest(String name, byte[] buffer, boolean case4,
    Set<Integer> successfulStatusCodes)
  +ApduRequest(byte[] buffer, boolean case4)
  +ApduRequest(String name, byte[] buffer, boolean case4)

  +setName(final String name)

  +byte[] getBytes()
  +boolean isCase4()
  +String getName()
  +Set<Integer> getSuccessfulStatusCodes()
}

+class "<b>final</b> ApduResponse" as ApduResponse {
  -<b>final</b> byte[] bytes
  -<b>final</b> boolean successful
  +ApduResponse(byte[] buffer, Set<Integer> successfulStatusCodes)
  +boolean isSuccessful()
  +int getStatusCode()
  +byte[] getBytes()

  .. To review - array copy ..
  +byte[] getDataOut()

  .. To review - need ..
  +boolean equals(Object o)
  +int hashCode()
}
@enduml

@startuml(id=MESSAGE_APDUREQUEST_0_9)
+class "<b>final</b> ApduRequest" as ApduRequest {
  -byte[] bytes
  -<b>final</b> boolean case4
  -<b>final</b>Set<Integer> successfulStatusCodes
  -String name

  +ApduRequest(byte[] buffer, boolean case4)
  +setName(<final> String name)
  +setSuccessfulStatusCodes(Set<Integer> codes)

  +byte[] getBytes()
  +boolean isCase4()
  +String getName()
  +Set<Integer> getSuccessfulStatusCodes()
}

+class "<b>final</b> ApduResponse" as ApduResponse {
  -<b>final</b> byte[] bytes
  -<b>final</b> boolean successful

  +ApduResponse(byte[] buffer)
  +setSuccessfulStatusCodes(Set<Integer> codes)

  +byte[] getBytes()
  +byte[] getDataOut()
  +int getStatusCode()

  +boolean isSuccessful()
}
@enduml

@startuml(id=MESSAGE_APDUREQUEST_ReaderAPI)
+class "<b>final</b> ApduRequest" as ApduRequest {
  -byte[] bytes
  -<b>final</b> boolean case4

  +ApduRequest(byte[] buffer, boolean case4)

  +byte[] getBytes()
  +boolean isCase4()
}

+class "<b>final</b> ApduResponse" as ApduResponse {
  -<b>final</b> byte[] bytes

  +ApduResponse(byte[] buffer)

  +byte[] getBytes()
  +byte[] getDataOut()
  +int getStatusCode()
}
@enduml

@startuml(id=MESSAGE_STATUS_0_8)
+class SelectionStatus {
  -<b>final</b> AnswerToReset atr
  -<b>final</b> ApduResponse fci
  -<b>final</b> boolean isMatching

  +SelectionStatus(AnswerToReset atr, ApduResponse fci, boolean isMatching)
  +AnswerToReset getAtr()
  +ApduResponse getFci()
  +boolean hasMatched()

  +boolean equals(Object o)
  +int hashCode()
}

+class AnswerToReset {
  -<b>final</b> byte[] atrBytes

  +AnswerToReset(byte[] atrBytes)
  +byte[] getBytes()

  +boolean equals(Object o)
  +int hashCode()
}
@enduml

@startuml(id=MESSAGE_STATUS_0_9)
+class SelectionStatus {
  -<b>final</b> byte[] atr
  -<b>final</b> ApduResponse fci
  -<b>final</b> boolean isMatching

  +SelectionStatus(AnswerToReset atr, ApduResponse fci, boolean isMatching)
  +AnswerToReset getAtr()
  +ApduResponse getFci()
  +boolean hasMatched()
}
@enduml

