'---------------------------------------------------------------------------------
' Copyright (c) 2018 Calypso Networks Association https://www.calypsonet-asso.org/
'
' See the NOTICE file(s) distributed with this work for additional
' information regarding copyright ownership.
'
' This program and the accompanying materials are made available under the
' terms of the Eclipse Public License 2.0 which is available at
' http://www.eclipse.org/legal/epl-2.0
'
' SPDX-License-Identifier: EPL-2.0 4
'---------------------------------------------------------------------------------

@startuml
!include KeypleCore-Api-ClassDiag-PlantUmlSetting.iuml

!include KeypleCore-ApplicationApi-ClassDiag-SE_Proxy-ClassElements.iuml!SEPROXY_TERMINALAPPLICATION

package org.eclipse.keyple.core.seproxy #FFFFFF {

  class SeProxyService

  package event #FFFFFF {
'---- EVENT_PLUGIN -------------------------------------------------------------[
'together {
    !include KeypleCore-ApplicationApi-ClassDiag-SE_Proxy-ClassElements.iuml!SEPROXY_EVENTPLUGIN
    !include KeypleCore-ApplicationApi-ClassDiag-SE_Proxy-ClassElements.iuml!SEPROXY_PLUGINOBSERVER_0_8_1
    interface ObservablePlugin
'}
    EventType_Plugin -up-+ PluginEvent

'---- EVENT_PLUGIN -------------------------------------------------------------]

'---- EVENT_PLUGIN_RELATION ----------------------------------------------------[
    PluginObserver "*" -down- "1" ObservablePlugin : observes >
    PluginEvent . (ObservablePlugin, PluginObserver)
    PluginObserver --o ObservablePlugin
'---- EVENT_PLUGIN_RELATION ----------------------------------------------------]

'---- EVENT_READER -------------------------------------------------------------[
    EventType_Reader -up--+ ReaderEvent
    ReaderEvent "1" o-down- "0..1" AbstractDefaultSelectionsResponse : contains >

    !include KeypleCore-ApplicationApi-ClassDiag-SE_Proxy-ClassElements.iuml!SEPROXY_READEROBSERVER_0_8_1
    interface ObservableReader
    !include KeypleCore-ApplicationApi-ClassDiag-SE_Proxy-ClassElements.iuml!SEPROXY_READERNOTIFICATION
    !include KeypleCore-ApplicationApi-ClassDiag-SE_Proxy-ClassElements.iuml!SEPROXY_DEFAULTSELECTION_PUB
'---- EVENT_READER -------------------------------------------------------------]

'---- EVENT_READER_RELATION ----------------------------------------------------[
    ReaderObserver "*" -down-- "1" ObservableReader : observes >
    ReaderEvent . (ReaderObserver, ObservableReader)
    ReaderObserver --o ObservableReader

    PollingMode --+ ObservableReader
    NotificationMode --+ ObservableReader
    ObservableReader "1" o-up- "0..1" AbstractDefaultSelectionsRequest : set >
AbstractDefaultSelectionsResponse -down[hidden]- AbstractDefaultSelectionsRequest
'---- EVENT_READER_RELATION ----------------------------------------------------]
  }

  interface ReaderPlugin
  interface SeReader

  SeProxyService "1" *--> "*" ReaderPlugin : plugins
  ReaderPlugin "1" *-down-> "*" SeReader : readers

  ObservablePlugin -left-|> ReaderPlugin : extends
  ObservableReader -left-|> SeReader : extends
}

SpecificPluginObserver .down.|> PluginObserver : implements
SpecificReaderObserver .down.|> ReaderObserver : implements
SpecificTerminal -down- SeProxyService : uses >

SpecificTerminal -right[hidden]--- SpecificPluginObserver
/'
SeProxyService -right[hidden]--> PluginObserver
PluginObserver  -right[hidden]--> EventType_Plugin
EventType_Plugin -right[hidden]--> ReaderObserver
ReaderObserver  -right[hidden]--> EventType_Reader
'/
SeProxyService -right[hidden]--> PluginObserver
PluginObserver  -right[hidden]--> EventType_Plugin
EventType_Plugin -right[hidden]--> EventType_Reader
EventType_Reader  -right[hidden]--> ReaderObserver


enum EventType_Plugin <<Plugin>>
interface PluginObserver <<Plugin>>
class PluginEvent <<Plugin>>
interface ObservablePlugin <<Plugin>>
hide <<Plugin>> stereotype

enum EventType_Reader <<Reader>>
interface ReaderObserver <<Reader>>
class ReaderEvent <<Reader>>
interface ObservableReader <<Reader>>
enum PollingMode <<Reader>>
enum NotificationMode <<Reader>>
abstract AbstractDefaultSelectionsRequest <<Reader>>
abstract AbstractDefaultSelectionsResponse <<Reader>>

hide <<Reader>> stereotype

skinparam class {
  BackgroundColor<<Plugin>> Azure
  BorderColor<<Plugin>> Blue
  BackgroundColor<<Reader>> TECHNOLOGY
  BorderColor<<Reader>> Green
}
@enduml
